{"ast":null,"code":"var _jsxFileName = \"/Users/tyopratama/Downloads/tenun-api-copy/client/src/page/Products.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { productsHome } from '../data';\nimport ProductItem from './ProductItem';\nimport axios from 'axios'; //  Styled sections\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n_c = Container;\n\nconst Products = ({\n  category,\n  filters,\n  sort\n}) => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const response = await axios.get(category ? `http://localhost:5001/api/products?category=${category}` : 'http://localhost:5001/api/products');\n        setProducts(response.data);\n      } catch (error) {}\n    };\n\n    getProducts();\n  }, [category]); //  Filtered\n\n  useEffect(() => {\n    category && setFilteredProducts(products.filter(item => Object.entries(filters).every(([key, value]) => item[key].includes(value))));\n  }, [products, category, filters]);\n  useEffect(() => {\n    if (sort === 'newest') {\n      setFilteredProducts(previous => [...previous].sort((x, y) => x.createdAt - y.createdAt));\n    }\n  }, [sort]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: filteredProducts.map(item => /*#__PURE__*/_jsxDEV(ProductItem, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"K1gQB4m1/iw3k3jmt5rFCbNdg2E=\");\n\n_c2 = Products;\nexport default Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/tyopratama/Downloads/tenun-api-copy/client/src/page/Products.jsx"],"names":["React","useEffect","useState","styled","productsHome","ProductItem","axios","Container","div","Products","category","filters","sort","products","setProducts","filteredProducts","setFilteredProducts","getProducts","response","get","data","error","filter","item","Object","entries","every","key","value","includes","previous","x","y","createdAt","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;;AAON,MAAME,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAA+B;AAAA;;AAC9C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUT,QAAQ,GAAI,+CAA8CA,QAAS,EAA3D,GACvC,oCADqB,CAAvB;AAEAI,QAAAA,WAAW,CAACI,QAAQ,CAACE,IAAV,CAAX;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc,CAAE;AACnB,KAND;;AAOAJ,IAAAA,WAAW;AACV,GATM,EASJ,CAACP,QAAD,CATI,CAAT,CAJ8C,CAchD;;AACIT,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,QAAQ,IAAIM,mBAAmB,CAC7BH,QAAQ,CAACS,MAAT,CAAiBC,IAAD,IAChBC,MAAM,CAACC,OAAP,CAAed,OAAf,EAAwBe,KAAxB,CAA8B,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAC5BL,IAAI,CAACI,GAAD,CAAJ,CAAUE,QAAV,CAAmBD,KAAnB,CADF,CADA,CAD6B,CAA/B;AAOD,GARQ,EAQN,CAACf,QAAD,EAAWH,QAAX,EAAqBC,OAArB,CARM,CAAT;AASAV,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGW,IAAI,KAAK,QAAZ,EAAqB;AACnBI,MAAAA,mBAAmB,CAACc,QAAQ,IAC1B,CAAC,GAAGA,QAAJ,EAAclB,IAAd,CAAmB,CAACmB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,GAAcD,CAAC,CAACC,SAA7C,CADiB,CAAnB;AAED;AACF,GALQ,EAKN,CAACrB,IAAD,CALM,CAAT;AAMF,sBACE,QAAC,SAAD;AAAA,cACKG,gBAAgB,CAACmB,GAAjB,CAAsBX,IAAD,iBACpB,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA;AAAnB,OAA8BA,IAAI,CAACY,EAAnC;AAAA;AAAA;AAAA;AAAA,YADD;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArCD;;GAAM1B,Q;;MAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { productsHome } from '../data';\nimport ProductItem from './ProductItem';\nimport axios from 'axios';\n\n//  Styled sections\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst Products = ({category, filters, sort}) => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const response = await axios.get(category ? `http://localhost:5001/api/products?category=${category}` \n        : 'http://localhost:5001/api/products');\n        setProducts(response.data);\n      } catch (error) {}\n    };\n    getProducts()\n    }, [category]);\n//  Filtered\n    useEffect(()=>{\n      category && setFilteredProducts(\n        products.filter((item)=>\n        Object.entries(filters).every(([key, value]) =>\n          item[key].includes(value)\n          )\n        )\n      );\n    }, [products, category, filters]);\n    useEffect(()=>{\n      if(sort === 'newest'){\n        setFilteredProducts(previous=>\n          [...previous].sort((x, y) => x.createdAt - y.createdAt));\n      }\n    }, [sort])\n  return (\n    <Container>\n        {filteredProducts.map((item)=>(\n          <ProductItem item={item} key={item.id}/>\n        ))}\n    </Container>\n  )\n}\n\nexport default Products"]},"metadata":{},"sourceType":"module"}